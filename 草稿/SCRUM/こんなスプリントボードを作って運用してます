## はじめに

現職ではスクラムを用いた開発を行っているのですが、スプリントボードを自作して運用しています。
この記事ではその紹介をさせていただきます。

本記事を読んだ方々からいろんなご意見いただけると幸いです。どうぞよろしくお願いいたします。

## スクラムイベントとスプリントボード

本題にはいるまえに...。
[スクラムガイド](https://scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-Japanese.pdf) にはスクラムイベントとして以下の5つを定義しています。

1. スプリント
2. スプリントプランニング
3. デイリースクラム
4. スプリントレビュー
5. スプリントレトロスペクティブ

各イベントの定義はスクラムガイドにあるのでここでは割愛しまして、私個人の所見をば。

私自身は、スプリントボードではこのイベントの `1.` 〜 `3.` を視覚化できると嬉しいなぁ、と考えています。

スプリントでは...
- 定めたスプリントゴールを目指してチームでタスクを進めます。

スプリントプランニングでは...
- スプリントでなにを達成するかを会話し、そのために必要な作業は何かを明確にします。

デイリースクラムでは...
- スプリントゴールの達成を阻害するものがあれば、それを相談して早期解決を目指します。

さて、ではスプリントボードはといいますと、こうした各イベントのインプット・アウトプットを表現することでスクラムチームがスプリントを円滑に進めることを補助するツール、と考えております。

## なぜ自作したのか？

現職では JIRA を利用しているのですが、私の所属するチームでは JIRA のボードを使ったスプリント運用はしていません。
( JIRA で発行したチケットは活用していますし、JIRA 上でスプリントも作成していますが、そこは本記事では触れません )

なぜかといいますと、

- 重い
- 見づらい
- 過去のスプリントを追跡できない

といったことが理由です。
( これらは私が JIRA を活用できていないことが大いに起因していると思いますが、それでもこうした理由から JIRA のボード運用は行っていないという現状です )

で、その代替となるボードが欲しいなぁ、ということで Figma 等のボードツールにスプリントボードを自作すればいいじゃない、となり自作するに至りました。

## 自作したスプリントボードの全体像

![01.SprintBoad.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/193342/a0854d03-0032-4772-95ad-db369ed71b4d.png)

スプリントボードは次の構成にしてます。

1. Sprintの番号とSprintGOAL
2. 日々のトピック
3. スプリントで対応するアイテム( Epic, バックログ, 差し込み)
4. 進捗ボード

これらの項目をスプリント中に随時更新していきます。
スプリントが完了したら次のスプリントようにボードを別途用意して運用します。

### Sprintの番号とSprintGOAL

![02.SprintGoal.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/193342/e94d4dbe-fa6e-42a4-87c2-de0ee72d04b6.png)

過去の履歴を追いやすくするのが目的の一つでもありますので、Sprint の番号 と Sprint GOAL を設けています。
また Sprint GOAL を目立つ場所に置くことで、常にゴールを意識することを見込んでいます。

### 日々のトピック

**目的: DSUの効率化と課題の即時共有**
![03.DailyTopics.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/193342/96bfc357-8c6f-450b-9720-0f49abadb7a3.png)

Daily Stand up (DSU) が進捗報告の場になっていること、また日によっては予定時間(15分) を超えることがあることが課題でした。
そうならないようにしようとメンバが相互に考えていても、実際の場では昨日なにやって今日はなにやる、という報告になりがちでした。

各タスクの進捗は [進捗ボード](#進捗ボード) で把握できるため、DSUでは相談事項や当日の予定（ペアプロ・レビューなど）を事前にトピックとして記載する運用としています。
これにより、メンバはトピックとして扱ってチームに共有・対応する課題はなにか、を考えるようになりましたし、トピックがない場合は DSU をクイックに解散するという流れが出来、メリハリが生まれました。

### スプリントで対応するアイテム

**目的: **
![04.BacklogItems.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/193342/5d5ddfae-24b0-4b76-b6fe-4499021fa359.png)

Epic や バックログ、差し込みを置く場所として活用しています。

Epic は現在対応している案件のルートとしていつでも参照できることを目的に、バックログはスプリントプランニングで「もし手が空いたときに対応する」チケットを置いています。
そして差し込みですが、ここにはスプリント中に発生した緊急タスクをおいています。

差し込みはスプリントプランニングでは登場していなかったものになりますので、それをスプリント中に対応したことで他の作業のブロッカーになった、ということが把握できるようにすることを目的にしています。

### 進捗ボード

**目的: ストーリーとタスクの状況確認**
![05.WorkInProgress.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/193342/834f7399-b864-4d67-a24c-ab68f757b471.png)

スプリンㇳで対応するストーリー、タスクの進捗状況を視覚情報として把握することを目的にしています。

バックログ、作業中、レビュー中、待ち、完了の状態をもち、ストーリーに紐づくタスクはいずれかの状態に配置します。
ストーリーとして2レーン、ストーリー外として1レーン用意していますが、これは一つのスプリント( 1スプリント1週間で運用しています )で対応できるストーリーは 1 ないし 2 くらいが妥当だろう、という経験的な判断です。
とは言うものの、実際には前スプリントからの継続ストーリーがあったり、スプリント中で対応予定だったストーリーが予定より早く終わったために次のストーリーに着手する、というケースが発生します。
